#include <iostream>
#include <string>
using namespace std;
const int MAX_TASKS = 10;
class Task {
public:
    string description;
    bool isCompleted;
    Task() : description(""), isCompleted(false) {}
};
class ToDoList {
private:
    Task tasks[MAX_TASKS];
    int taskCount;
public:
    ToDoList() : taskCount(0) {}
    void addTask() {
        if (taskCount < MAX_TASKS) {
            cout << "Enter task description: ";
            cin.ignore();
            getline(cin, tasks[taskCount].description);
            tasks[taskCount].isCompleted = false;
            taskCount++;
            cout << "Task added successfully!" << endl;
        } else {
            cout << "Task list is full! Cannot add more tasks." << endl;
        }
    }
    void viewTasks() const {
        if (taskCount == 0) {
            cout << "No tasks available!" << endl;
        } else {
            cout << "\nTasks List:" << endl;
            for (int i = 0; i < taskCount; ++i) {
                cout << i + 1 << ". " << tasks[i].description;
                if (tasks[i].isCompleted) {
                    cout << " (Completed)";
                } else {
                    cout << " (Pending)";
                }
                cout << endl;
            }
        }
    }
    void markTaskAsCompleted() {
        int taskNumber;
        cout << "Enter task number to mark as completed: ";
        cin >> taskNumber;
        if (taskNumber >= 1 && taskNumber <= taskCount) {
            tasks[taskNumber - 1].isCompleted = true;
            cout << "Task marked as completed!" << endl;
        } else {
            cout << "Invalid task number!" << endl;
        }
    }
    void removeTask() {
        int taskNumber;
        cout << "Enter task number to remove: ";
        cin >> taskNumber;

        if (taskNumber >= 1 && taskNumber <= taskCount) {
            for (int i = taskNumber - 1; i < taskCount - 1; ++i) {
                tasks[i] = tasks[i + 1];
            }
            taskCount--;
            cout << "Task removed successfully!" << endl;
        } else {
            cout << "Invalid task number!" << endl;
        }
    }
    int displayMenu() const {
        int choice;
        cout << "\nTo-Do List Manager" << endl;
        cout << "1. Add Task" << endl;
        cout << "2. View Tasks" << endl;
        cout << "3. Mark Task as Completed" << endl;
        cout << "4. Remove Task" << endl;
        cout << "5. Exit" << endl;
        cout << "Enter your choice (1-5): ";
        cin >> choice;
        return choice;
    }
};
int main() {
    ToDoList todoList;
    int choice;
    while (true) {
        choice = todoList.displayMenu();
        switch (choice) {
            case 1:
                todoList.addTask();
                break;
            case 2:
                todoList.viewTasks();
                break;
            case 3:
                todoList.markTaskAsCompleted();
                break;
            case 4:
                todoList.removeTask();
                break;
            case 5:
                cout << "Exiting the program. Goodbye!" << endl;
                return 0;
            default:
                cout << "Invalid choice! Please try again." << endl;
        }
    }
    return 0;
}
